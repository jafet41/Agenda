{"version":3,"sources":["constants.js","services/http-helper.js","services/appointments.js","Helpers.js","components/Navbar.js","components/Appointment.js","components/AppointmentList.js","components/CellNormal.js","components/CellDays.js","components/CellGrayPrev.js","components/CellGrayNext.js","components/OffsetPage.js","App.js","index.js"],"names":["monthNames","dayNames","numDays","leapNumDays","axios","create","baseURL","headers","Content-type","services_appointments","AppointmentDataService","_classCallCheck","this","_createClass","key","value","year","month","http","get","concat","fullDate","data","post","put","id","userId","delete","user_id","getLast","monthLength","firstDay","Navbar","_useContext","useContext","DateContext","offset","_","fechaOffset","_offset","_slicedToArray","stateOffset","setStateOffset","_fechaOffset","stateFechaOffset","setStateFechaOffset","MONTH_C","getMonth","YEAR_C","getFullYear","useEffect","tmp","Date","currentMonth","currentYear","totalMonths","totalYears","Math","trunc","Helpers","React","createElement","className","console","log","type","onClick","prevOffset","Appointment","props","_useState","useState","_useState2","backgroundColor","setBackgroundColor","colors","randomColor","floor","random","length","start","Hour","toLocaleString","minimumIntegerDigits","Minute","end","AppointmentList","fechaOff","isoQuery","number","toISOString","appointments","setAppointments","retrieveAppointments","isoQ","getByDate","then","response","catch","e","_useState3","_useState4","Fragment","slice","map","x","CellNormal","postHandler","num","fecha","YEAR","MONTH","appointmentDate","ans","prompt","pattern","exec","stringAns","objStart","Number","objEnd","overflow","appointmentObj","createAppointment","insertedId","alert","DATE_C","getDate","blueBGH","setBlueBGH","onDoubleClick","Cell","day","finalPrevD","leap_offset","isLeap","len","equis","OffsetPage","MONTH_DAYS","_toConsumableArray","Array","keys","FIRST_ONES","currentDay","dayOfWeek","getDay","LAST_ONES","IS_LEAP","isL","PREV_MONTH","NEXT_MONTH","d","idx","CellDays","CellGrayPrev","CellGrayNext","createContext","App","setFecha","setOffset","_useState5","_useState6","setFechaOffset","Provider","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.111fa56e.chunk.js","sourcesContent":["const monthNames = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\",\n  \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\nconst dayNames = [\"Domingo\", \"Lunes\", \"Martes\", \n  \"Miercoles\", \"Jueves\", \"Viernes\", \"Sabado\"]\nconst numDays =    [31,28,31,30,31,30,31,31,30,31,30,31];\nconst leapNumDays =[31,29,31,30,31,30,31,31,30,31,30,31];\n\nexport {monthNames, dayNames, leapNumDays, numDays};","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://us-east-1.aws.data.mongodb-api.com/app/appointments-fypxl/endpoint\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  });","import http from \"./http-helper\";\n\nclass AppointmentDataService {\n  getByMonth(year,month) {\n    return http.get(`/appointments_month?year=${year}&month=${month}`);\n  }\n\n  getByDate(fullDate) {\n    return http.get(`/appointments_date?fullDate=${fullDate}`);\n  }\n\n  createAppointment(data) {\n    return http.post(\"/appointments_new\", data);\n  }\n\n  updateAppointment(data) {\n    return http.put(\"/appointments_edit\", data);\n  }\n\n  deleteAppointment(id, userId) {\n    return http.delete(`/appointments-delete?id=${id}`, {data:{user_id: userId}});\n  }\n\n}\n\nexport default new AppointmentDataService();","import AppointmentDataService from \"./services/appointments\";\n\nexport function getFirst(currentDay,dayOfWeek){\n    let firstDay=dayOfWeek-(currentDay%7)+1;\n    if(firstDay<0) return firstDay+7;\n    if(firstDay===0) return 7;\n    return firstDay;\n}\nexport function getLast(monthLength,firstDay){\n    let total=monthLength+firstDay;\n    return 7-total%7;\n}\n//Anio Bisiesto  \nexport function isLeap(year){\n      let isL=false\n      if( year%4===0 && (year%100!==0||year%400===0) )  isL=true\n      return isL\n}\n//Update date\nexport function newDate(offset){\n    let tmp= new Date()\n    let currentMonth=tmp.getMonth();\n    let currentYear=tmp.getFullYear(); \n    if(offset===0) return tmp;\n    let totalMonths=(currentMonth + 1) + offset;\n    let totalYears=Math.trunc(totalMonths/12);\n    let remainderMonths=totalMonths%12\n    tmp=new Date(currentYear+totalYears,remainderMonths-1)\n    return tmp\n}\n\n//---------------------------Manejador de agenda-------------------------------\nexport function handlerAgenda(num,fecha){\n    const YEAR=fecha.getFullYear();\n    const MONTH=fecha.getMonth();\n    const DATE=num;\n    const appointmentDate=new Date(YEAR, MONTH, DATE)\n  \n    const ans=prompt(`¿A que hora quieres que inicie tu cita? \n                        \\nEl formato es -> HH:MM\n                        \\nLos valores de HH son de 00-23\n                        \\nLos valores de MM son de 00-59 \n                        \\nLa duracion de una cita es de 30 Minutos:  `,\"08:00\")\n    //Regex Pattern for validation\n    const pattern=/^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$/\n    try{\n       if(pattern.exec(ans)[0]){\n           const stringAns=pattern.exec(ans)[0]\n           let objStart={}\n           objStart.Hour=Number(stringAns[0]+stringAns[1])\n           objStart.Minute=Number(stringAns[3]+stringAns[4])\n           let objEnd={}\n           objEnd.Minute=objStart.Minute+30\n           if(objEnd.Minute>59){\n               let overflow=Math.trunc(objEnd.Minute/60)\n               objEnd.Hour=objStart.Hour+overflow\n               objEnd.Minute=objEnd.Minute%60\n           } else {\n               objEnd.Hour=objStart.Hour\n           }\n           \n           let appointmentObj={}\n           appointmentObj.start=objStart\n           appointmentObj.end=objEnd\n           appointmentObj.appointmentDate=appointmentDate\n           \n           //POST the data to mongoDB\n           AppointmentDataService.createAppointment(appointmentObj)\n               .then( response => {\n                   if(response.data.insertedId){\n                        alert(\"Cita creada:\" +response.data.insertedId)\n                   }\n                   else{\n                       alert(response.data)\n                       console.log(response)\n                   }\n               })\n               .catch(e => {\n                   console.log(e);\n                   alert(e)\n               })\n       }\n   } catch (e){\n       alert(\"Ingresaste Datos Invalidos\")\n   } finally{\n   }\n}\n","import React, { useContext, useEffect } from 'react';\nimport { DateContext } from '../App';\nimport  { monthNames } from '../constants';\nimport '../App.css'\nimport * as Helpers from '../Helpers';\n\nfunction Navbar(){\n    const {_, offset, fechaOffset} = useContext(DateContext)\n    const [stateOffset, setStateOffset] = offset\n    const [stateFechaOffset,setStateFechaOffset] = fechaOffset\n\n    const MONTH_C=stateFechaOffset.getMonth();\n    const YEAR_C=stateFechaOffset.getFullYear();\n    \n    function decrementOffset(){\n      setStateOffset( prevOffset => prevOffset - 1 )\n    }\n    function incrementOffset(){\n      setStateOffset( prevOffset => prevOffset + 1 )\n    }\n    useEffect( () => {\n      setStateFechaOffset( () => Helpers.newDate(stateOffset) )\n    }, [stateOffset] )\n\n    return(\n        <nav className='nav'>\n            <div className='buttons'>\n              {console.log(\"Navbar\")}\n                <button type=\"button\" onClick={decrementOffset}>Back</button>\n                <button type=\"button\" onClick={incrementOffset}>Next</button>\n            </div>\n            <h1 className='month-title'>\n              { monthNames[MONTH_C] } { YEAR_C }\n            </h1>     \n        </nav>\n    )\n}\n\nexport default Navbar;","import React, { useState, useEffect } from 'react';\nimport './appointment.css'\n\nexport default function Appointment(props){\n    const [backgroundColor, setBackgroundColor] = useState('color5');\n    const colors = ['color1', 'color2', 'color3', 'color4', 'color5', 'color6'];\n    \n    useEffect(() => {\n        const randomColor = colors[Math.floor(Math.random() * colors.length)];\n        setBackgroundColor(randomColor);\n    }, []);\n    return(\n        <article className={`appointment ${backgroundColor}`}>\n            Cita{' -> '} \n            {props.start.Hour.toLocaleString( 'en-US',{minimumIntegerDigits: 2})}\n            :{props.start.Minute.toLocaleString('en-US',{minimumIntegerDigits: 2})}\n            -{props.end.Hour.toLocaleString('en-US',{minimumIntegerDigits: 2})}\n            :{props.end.Minute.toLocaleString('en-US',{minimumIntegerDigits: 2})}\n        </article>\n    )\n}","import React, {useState, useEffect, useContext} from \"react\"\nimport  { DateContext } from '../App'\nimport Appointment from './Appointment'\nimport './appointment.css'\nimport AppointmentDataService from \"../services/appointments\";\n\nexport default function AppointmentList(props){\n    const fechaOff= useContext(DateContext).fechaOffset[0]\n    const dateQuery=new Date(fechaOff.getFullYear(),fechaOff.getMonth(),props.number)\n    const isoQuery=dateQuery.toISOString()\n    const [appointments, setAppointments] = useState([]);\n    useEffect(() => {\n        retrieveAppointments(isoQuery)\n    }, [fechaOff])\n    \n    const retrieveAppointments = (isoQ) => {\n        AppointmentDataService.getByDate(isoQ)\n        .then(response => {\n            console.log(\"got appointments arr\");\n            setAppointments(response.data.appointments);\n        })\n        .catch(e => {\n            console.log(e);\n        });\n    };\n\n    const [backgroundColor, setBackgroundColor] = useState('color2');\n    const colors = ['color1', 'color2', 'color3', 'color4', 'color5', 'color6'];\n    useEffect(() => {\n        const randomColor = colors[Math.floor(Math.random() * colors.length)];\n        setBackgroundColor(randomColor);\n    }, [])\n    \n    return(\n        <>\n        {appointments && \n            appointments.slice(0, 3).map( x => \n            <Appointment start={x.start} end={x.end} key={`aId-${x.start.Hour*60+x.start.Minute}`}/>\n            )\n        }\n        {appointments.length>3 && \n            <article className={`appointment ${backgroundColor}`}> \n              Mas... \n            </article>\n        }\n        </>\n    );\n}","import React, { useContext, useState, useEffect } from 'react';\nimport  { DateContext } from '../App'\nimport './cell.css'\nimport AppointmentList from './AppointmentList'\nimport './appointment.css'\nimport * as Helpers from '../Helpers';\n\nexport default function CellNormal(props){\n    const fechaOff= useContext(DateContext).fechaOffset[0]\n    var post=null;\n    function postHandler(){\n        post=Helpers.handlerAgenda(props.number,fechaOff)\n        console.log(post)\n    }\n    //Getting current day information\n    let currentDate = useContext(DateContext).fecha[0]\n    const DATE_C=currentDate.getDate();\n    //Some styles\n    const offset= useContext(DateContext).offset[0]\n    const [blueBGH,setBlueBGH]=useState('')\n    useEffect(() => {\n        if(offset===0 && props.number===DATE_C){ setBlueBGH('presentDay') }\n        else{setBlueBGH('')}\n    }, [offset]);\n \n    return(\n        <article className={`cell ${blueBGH}`} onDoubleClick={()=>postHandler()}>\n        <span >{props.number}</span>\n        <AppointmentList number={props.number}/>\n        </article>\n    )\n}","import React from \"react\";\nimport './cellDays.css'\n\nexport default function Cell(props){\n    return(\n        <article className=\"cellDays\">\n            {props.day}\n        </article>\n    )\n}","import React from \"react\";\nimport './cell.css';\nimport './cellGray.css';\nimport  {numDays} from '../constants'\n\nexport default function Cell(props){\n    let articleCl=\"cell grayDay\";\n    let finalPrevD=numDays[props.month];\n    let leap_offset=0;\n    if (props.isLeap && props.month===1) leap_offset=1;\n    if (props.month===-1) finalPrevD=numDays[11];\n    return(\n        <article className={articleCl}>\n            {finalPrevD - props.len + (props.equis+1) + leap_offset}\n        </article>\n    )    \n}","import React from \"react\";\nimport './cellGray.css';\nimport './cell.css';\n\nexport default function Cell(props){\n    let articleCl=\"cell grayDay\";\n    return(\n        <article className={articleCl}>\n            {props.equis +1}\n        </article>\n    )    \n}","import React, { useContext} from 'react';\nimport  { DateContext } from '../App'\nimport '../App.css';\nimport * as Helpers from '../Helpers';\nimport  {dayNames, leapNumDays, numDays} from '../constants'\nimport CellNormal from './CellNormal';\nimport CellDays from './CellDays';\nimport CellGrayPrev from './CellGrayPrev';\nimport CellGrayNext from './CellGrayNext';\n\nfunction OffsetPage() {\n  let fecha = useContext(DateContext).fechaOffset[0]\n  //Getting information about the offset month\n  const DATE_C=fecha.getDate();\n  const MONTH_C=fecha.getMonth();\n  const YEAR_C=fecha.getFullYear();\n  //Arrays that represent days of the current month\n  let MONTH_DAYS=[ ...Array( numDays[MONTH_C] ).keys() ];\n  //Getting number of gray cells for the previous and next month\n  const FIRST_ONES= Helpers.getFirst(DATE_C,fecha.getDay());\n  let LAST_ONES= Helpers.getLast(numDays[MONTH_C], FIRST_ONES);\n  //Checking if the year to display is a leap year\n  const IS_LEAP=Helpers.isLeap(YEAR_C)\n  //If is leap year make the porper adjustments\n  if(IS_LEAP){\n    MONTH_DAYS = [ ...Array( leapNumDays[MONTH_C] ).keys() ];\n    LAST_ONES= Helpers.getLast(leapNumDays[MONTH_C], FIRST_ONES);\n  }\n  //Arrays that represent days of the previous and next month\n  const PREV_MONTH = [ ...Array( FIRST_ONES ).keys() ]\n  const NEXT_MONTH = [ ...Array( LAST_ONES ).keys() ]   \n  return (\n    <div className='parent'>\n      {console.log(\"from OFFSET PAGE\")}\n       <div className='sevenColGrid'>\n        { dayNames.map( (d,idx) => <CellDays day={d} key={`${idx}`} /> )}\n        { PREV_MONTH.map( (x) => <CellGrayPrev equis={x} isLeap={IS_LEAP} len={PREV_MONTH.length} month={MONTH_C-1} key={`prv-${x}`} /> ) }\n        { MONTH_DAYS.map( (num) => <CellNormal number={num+1} key={`cN-${num+1}`}/>  ) }\n        { NEXT_MONTH.map( (x) => <CellGrayNext equis={x} key={`nxt-${x}`} /> ) }\n        <br />\n       </div>\n       <br />\n    </div>\n  );\n}\n\nexport default OffsetPage","import React, {useState} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport OffsetPage from './components/OffsetPage'\n\nexport const DateContext = React.createContext()\n\nfunction App() {\n\n  const [fecha,setFecha] = useState(new Date())\n  const [offset,setOffset] = useState(0)\n  const [fechaOffset,setFechaOffset] = useState(new Date())\n\n  return (\n    <DateContext.Provider \n     value={{ fecha: [fecha,setFecha], offset: [offset,setOffset], fechaOffset: [fechaOffset,setFechaOffset] }}>\n      <Navbar />\n      <OffsetPage />\n    </DateContext.Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n"],"sourceRoot":""}